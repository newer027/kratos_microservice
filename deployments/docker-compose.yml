version: '3'
services:
  details:
    build:
      context: ..
      dockerfile: "build/details/Dockerfile"
    command: ./wait-for db:3306 -t 30 -- .cmd -conf ../configs -grpc=tcp://0.0.0.0:9000/?timeout=1s&idle_timeout=60s -log.dir=/details_log
    depends_on:
      - db
      - discovery
      - jaeger-agent
      - memcached
      - redis
    ports:
      - "8081:8081"
  products:
    build:
      context: ..
      dockerfile: "build/products/Dockerfile"
    command: ./wait-for db:3306 -t 30 -- .cmd -conf ./configs --discovery.nodes="127.0.0.1:7171" -log.dir=/products_log
    depends_on:
      - db
      - discovery
      - jaeger-agent
    ports:
      - "8080:8080"
  discovery:
    build:
      context: ..
      dockerfile: "build/discovery/Dockerfile"
    command: ./discovery -conf discovery-example.toml -log.dir=/discovery_log
    ports:
      - "7171:7171"
  db:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: products
      MYSQL_USER: products
      MYSQL_PASSWORD: 123456
    volumes:
      - ../scripts/products.sql:/docker-entrypoint-initdb.d/products.sql
  jaeger-collector:
    image: jaegertracing/jaeger-collector
    command: ["--cassandra.keyspace=jaeger_v1_dc1", "--cassandra.servers=cassandra", "--collector.zipkin.http-port=9411"]
    ports:
      - "14269"
      - "14268:14268"
      - "14267"
      - "14250"
      - "9411:9411"
    restart: on-failure
    depends_on:
      - cassandra-schema
  jaeger-query:
    image: jaegertracing/jaeger-query
    command: ["--cassandra.keyspace=jaeger_v1_dc1", "--cassandra.servers=cassandra"]
    ports:
      - "16686:16686"
      - "16687"
    restart: on-failure
    depends_on:
      - cassandra-schema
  jaeger-agent:
    image: jaegertracing/jaeger-agent
    command: ["--reporter.grpc.host-port=jaeger-collector:14250"]
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
    restart: on-failure
    depends_on:
      - jaeger-collector
  cassandra:
    image: cassandra:3.9
  cassandra-schema:
    image: jaegertracing/jaeger-cassandra-schema
    depends_on:
      - cassandra
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/prometheus/prometheus.yml'
      - "--web.external-url=http://localhost:9090"
    volumes:
      - "../configs/prometheus/prometheus.yml:/prometheus/prometheus.yml"
      - "../configs/prometheus/rules:/rules"
  alertmanager:
    image: prom/alertmanager
    volumes:
      - "../configs/prometheus/alertmanager.yml:/prometheus/alertmanager.yml"
      - "/tmp/alermanager:/data"
    command:
      - '--config.file=/prometheus/alertmanager.yml'
      - '--storage.path=/data'
    ports:
      - 9093:9093
  grafana-db:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: grafana
      MYSQL_USER: grafana
      MYSQL_PASSWORD: password
    ports:
      - 3306
  grafana:
    image: grafana/grafana:latest
    volumes:
      - ../configs/grafana/provisioning/:/etc/grafana/provisioning/
      - ../configs/grafana/dashboards/:/tmp/dashboards/
    environment:
      # - VIRTUAL_HOST=grafana.loc
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_DATABASE_NAME=grafana
      - GF_DATABASE_USER=grafana
      - GF_DATABASE_PASSWORD=password
      - GF_DATABASE_TYPE=mysql
      - GF_DATABASE_HOST=grafana-db:3306
      - GF_DATABASE_MAX_OPEN_CONN=300
      - GF_SESSION_PROVIDER=mysql
      - GF_SESSION_PROVIDER_CONFIG=grafana:password@tcp(db:3306)/grafana?allowNativePasswords=true
      # - GF_DATABASE_TYPE=postgres
      # - GF_DATABASE_HOST=db:5432
      # - GF_DATABASE_SSL_MODE=disable
      # - GF_SESSION_PROVIDER=postgres
      # - GF_SESSION_PROVIDER_CONFIG=user=grafana password=password host=db port=5432 dbname=grafana sslmode=disable
      - GF_SERVER_ROUTER_LOGGING=true
      - GF_LOG_CONSOLE_FORMAT=json
      - GF_LOG_FILTERS=alerting.notifier:debug,alerting.notifier.slack:debug,auth:debug
      - GF_AUTH_TOKEN_ROTATION_INTERVAL_MINUTES=2
    ports:
      - "3000:3000"
    depends_on:
      - grafana-db
    restart: always
  redis:
    image: redis:latest
    volumes:
      - ./data/redis:/data
  memcached:
    image: memcached:latest

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-platinum:6.2.2
    volumes:
      - ../scripts/elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: youpassword
    networks:
      - elk
  filebeat:
    image: docker.elastic.co/beats/filebeat:6.2.2
    command: filebeat -e -strict.perms=false
    #volumnes mount depend on you OS ( Windows or Linux )
    volumes:
      - ../scripts/elk/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./collect_log:/usr/share/filebeat/logs
    networks:
      - elk
    links:
        - elasticsearch
        - kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:6.2.2
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: youpassword
    ports:
      - 5601:5601
    networks:
      - elk
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
networks:
  elk:
    driver: bridge